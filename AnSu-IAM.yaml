swagger: '2.0'
info:
  description: >-
    AnSu-IAM is a IAM (Identity and Authorisation Management) service that can
    be used for token based authentication.
  version: 1.0.0
  title: AnSu-IAM
  termsOfService: ''
  contact:
    email: ansu.iam.admin@gmail.com
host: 52.14.172.233
basePath: /
tags:
  - name: application
    description: Application management
  - name: user
    description: User management
  - name: token
    description: Token management
schemes:
  - http
paths:
  /app/:
    get:
      tags:
        - application
      summary: Get the application's appId
      description: ''
      produces:
        - application/json
      parameters:
        - in: query
          name: appName
          description: Name of the application
          required: true
          type: string
      responses:
        default:
          description: Check payload for appropriate response
  /app/create:
    post:
      tags:
        - application
      summary: Register a new application
      description: ''
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: appName
          description: Name of the application to be registered
          required: true
          type: string
      responses:
        default:
          description: Check payload for appropriate response
  /app/update:
    put:
      tags:
        - application
      summary: Update application's token life time (in seconds)
      description: ''
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: appId
          description: Application ID (see GET /app/)
          required: true
          type: string
        - in: formData
          name: seconds
          description: seconds for which the token will be valid
          required: true
          type: integer
      responses:
        default:
          description: Status of request
  /user/create:
    post:
      tags:
        - user
      summary: >-
        Create new user inside the scope of an application (identified by App
        ID)
      description: ''
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: name
          description: Username
          required: true
          type: string
        - in: formData
          name: pass
          description: User's password
          required: true
          type: string
        - in: formData
          name: appId
          description: Application ID
          required: true
          type: string
      responses:
        default:
          description: 'Status of request, includes User ID if successful in `payload` field'
  /user/delete:
    delete:
      tags:
        - user
      summary: Delete user associated with application (identified by App ID)
      description: ''
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: uid
          description: User ID
          required: true
          type: string
        - in: formData
          name: appId
          description: Application ID
          required: true
          type: string
      responses:
        default:
          description: Status of request
  /token/checkValid:
    get:
      tags:
        - token
      summary: Check if token is valid
      description: ''
      produces:
        - application/json
      parameters:
        - in: query
          name: appId
          description: Application ID
          required: true
          type: string
        - in: query
          name: token
          description: Token whose validity is to be checked
          required: true
          type: string
      responses:
        default:
          description: >-
            Status of request, includes `Valid` or `Invalid` message in
            `payload` field
  /token/generate:
    post:
      tags:
        - token
      summary: Generate token
      description: ''
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: uid
          description: User IS
          required: true
          type: string
        - in: formData
          name: pass
          description: User Password
          required: true
          type: string
        - in: formData
          name: appId
          description: Application ID
          required: true
          type: string
      responses:
        default:
          description: 'Status of request, includes token string in `payload` field'
  /token/delete:
    post:
      tags:
        - token
      summary: Remove/Invalidate token
      description: ''
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: appId
          description: Application ID
          required: true
          type: string
        - in: formData
          name: token
          description: Token to be removed/invalidated
          required: true
          type: string
      responses:
        default:
          description: Status of request
